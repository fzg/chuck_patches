Binary files chuck-1.3.5.2/src/chuck and chuck-1.3.5.2_mod/src/chuck differ
Binary files chuck-1.3.5.2/src/chuck_absyn.o and chuck-1.3.5.2_mod/src/chuck_absyn.o differ
Binary files chuck-1.3.5.2/src/chuck_bbq.o and chuck-1.3.5.2_mod/src/chuck_bbq.o differ
diff -Nur chuck-1.3.5.2/src/chuck_compile.cpp chuck-1.3.5.2_mod/src/chuck_compile.cpp
--- chuck-1.3.5.2/src/chuck_compile.cpp	2015-10-21 11:04:45.000000000 +0200
+++ chuck-1.3.5.2_mod/src/chuck_compile.cpp	2016-11-10 03:29:32.214722419 +0100
@@ -38,6 +38,7 @@
 #include "ugen_xxx.h"
 #include "ugen_filter.h"
 #include "ugen_stk.h"
+#include "ugen_detune.h"
 #include "uana_xform.h"
 #include "uana_extract.h"
 #include "ulib_machine.h"
@@ -577,6 +578,9 @@
     EM_log( CK_LOG_SEVERE, "module extract..." );
     load_module( env, extract_query, "extract", "global" );
     
+
+    if( !load_module( env, detune_query, "detune", "global" ) ) goto error;
+
     // load
     EM_log( CK_LOG_SEVERE, "class 'machine'..." );
     if( !load_module( env, machine_query, "Machine", "global" ) ) goto error;
Binary files chuck-1.3.5.2/src/chuck_compile.o and chuck-1.3.5.2_mod/src/chuck_compile.o differ
Binary files chuck-1.3.5.2/src/chuck_console.o and chuck-1.3.5.2_mod/src/chuck_console.o differ
Binary files chuck-1.3.5.2/src/chuck_dl.o and chuck-1.3.5.2_mod/src/chuck_dl.o differ
Binary files chuck-1.3.5.2/src/chuck_emit.o and chuck-1.3.5.2_mod/src/chuck_emit.o differ
Binary files chuck-1.3.5.2/src/chuck_errmsg.o and chuck-1.3.5.2_mod/src/chuck_errmsg.o differ
Binary files chuck-1.3.5.2/src/chuck_frame.o and chuck-1.3.5.2_mod/src/chuck_frame.o differ
diff -Nur chuck-1.3.5.2/src/chuck_globals.cpp chuck-1.3.5.2_mod/src/chuck_globals.cpp
--- chuck-1.3.5.2/src/chuck_globals.cpp	2015-10-21 11:04:45.000000000 +0200
+++ chuck-1.3.5.2_mod/src/chuck_globals.cpp	2016-11-10 02:47:34.595673674 +0100
@@ -33,6 +33,7 @@
 #include "chuck_bbq.h"
 #include "chuck_errmsg.h"
 #include "ugen_stk.h"
+#include "ugen_detune.h"
 #include "ulib_std.h"
 #include "hidio_sdl.h"
 #include "chuck_io.h"
diff -Nur chuck-1.3.5.2/src/makefile.alsa chuck-1.3.5.2_mod/src/makefile.alsa
--- chuck-1.3.5.2/src/makefile.alsa	2015-10-21 11:04:45.000000000 +0200
+++ chuck-1.3.5.2_mod/src/makefile.alsa	2016-11-10 03:24:29.036315455 +0100
@@ -1,4 +1,4 @@
 
 CFLAGS+= -D__LINUX_ALSA__ -D__PLATFORM_LINUX__ -O3 -fno-strict-aliasing -D__CK_SNDFILE_NATIVE__
-LDFLAGS+= -lasound -lstdc++ -ldl -lm -lsndfile -lpthread
+LDFLAGS+= -lasound -lstdc++ -ldl -lm -lsndfile -lpthread -lgmp
 
diff -Nur chuck-1.3.5.2/src/makefile.audicle chuck-1.3.5.2_mod/src/makefile.audicle
--- chuck-1.3.5.2/src/makefile.audicle	2015-10-21 11:04:45.000000000 +0200
+++ chuck-1.3.5.2_mod/src/makefile.audicle	2016-11-10 03:11:39.658483998 +0100
@@ -32,7 +32,7 @@
 	rtaudio.o rtmidi.o ugen_osc.o ugen_filter.o ugen_stk.o ugen_xxx.o \
 	ulib_machine.o ulib_math.o ulib_std.o ulib_opsc.o util_buffers.o \
 	util_math.o util_network.o util_raw.o util_string.o util_thread.o \
-	util_xforms.o util_opsc.o util_console.o util_hid.o $(SF_OBJ)
+	util_xforms.o util_opsc.o util_console.o util_hid.o  ugen_detune.o $(SF_OBJ)
 
 chuck: $(OBJS)
 	$(CXX) -o chuck $(OBJS) $(LIBS)
diff -Nur chuck-1.3.5.2/src/makefile.rl chuck-1.3.5.2_mod/src/makefile.rl
--- chuck-1.3.5.2/src/makefile.rl	2015-10-21 11:04:45.000000000 +0200
+++ chuck-1.3.5.2_mod/src/makefile.rl	2016-11-10 02:46:47.507264182 +0100
@@ -34,7 +34,7 @@
 	chuck_compile.o chuck_dl.o chuck_oo.o chuck_lang.o chuck_ugen.o \
 	chuck_main.o chuck_otf.o chuck_stats.o chuck_bbq.o chuck_shell.o \
 	chuck_console.o chuck_globals.o digiio_rtaudio.o midiio_rtmidi.o \
-	rtaudio.o rtmidi.o ugen_osc.o ugen_filter.o ugen_stk.o ugen_xxx.o \
+	rtaudio.o rtmidi.o ugen_osc.o ugen_filter.o ugen_stk.o ugen_detune.o ugen_xxx.o \
 	ulib_machine.o ulib_math.o ulib_std.o ulib_opsc.o util_buffers.o \
 	util_console.o util_math.o util_network.o util_raw.o \
 	util_string.o util_thread.o util_xforms.o util_opsc.o $(SF_OBJ)
@@ -153,6 +153,9 @@
 ugen_stk.o: ugen_stk.h ugen_stk.cpp
 	$(CXX) $(FLAGS) ugen_stk.cpp
 
+ugen_detune.o: ugen_detune.h ugen_detune.cpp
+	$(CXX) $(FLAGS) ugen_detune.cpp
+
 ulib_machine.o: ulib_machine.h ulib_machine.cpp
 	$(CXX) $(FLAGS) ulib_machine.cpp
 
diff -Nur chuck-1.3.5.2/src/ugen_detune.cpp chuck-1.3.5.2_mod/src/ugen_detune.cpp
--- chuck-1.3.5.2/src/ugen_detune.cpp	1970-01-01 01:00:00.000000000 +0100
+++ chuck-1.3.5.2_mod/src/ugen_detune.cpp	2016-11-10 03:46:50.588485652 +0100
@@ -0,0 +1,152 @@
+#include "ugen_detune.h"
+#include "chuck_type.h"
+#include "util_math.h"
+#include "chuck_vm.h"
+#include "chuck_lang.h"
+#include <stdlib.h>
+#include <string.h>
+#include <time.h>
+#include <float.h>
+#include <limits.h>
+
+#include <stdio.h>
+#include <gmp.h>
+
+/*
+CK_DLL_CTOR( Detune_ctor );
+CK_DLL_DTOR( Detune_dtor );
+CK_DLL_TICK( Detune_tick );
+CK_DLL_PMSG( Detune_pmsg );
+CK_DLL_CTRL( Detune_ctrl_amount );
+CK_DLL_CGET( Detune_cget_amount );
+CK_DLL_CGET( Detune_cget_output );
+*/
+static t_CKUINT Detune_data = 0;
+
+
+
+DLL_QUERY detune_query( Chuck_DL_Query * QUERY )
+{
+
+    Chuck_Env * env = Chuck_Env::instance();
+    Chuck_DL_Func * func = NULL;
+
+    if( !type_engine_import_ugen_begin( env, "Detune", "UGen", env->global(),
+                                        Detune_ctor, Detune_dtor,
+                                        Detune_tick, Detune_pmsg ) ) return FALSE;
+
+    Detune_data = type_engine_import_mvar ( env, "int", "@Detune_data", FALSE );
+    if( Detune_data == CK_INVALID_OFFSET ) goto error;
+
+    func = make_new_mfun( "float", "amount", Detune_ctrl_amount ); //! attack time
+    func->add_arg( "float", "amount" );
+    if( !type_engine_import_mfun( env, func ) ) goto error;
+
+    func = make_new_mfun( "float", "amount", Detune_cget_amount ); //! attack time
+    if( !type_engine_import_mfun( env, func ) ) goto error;
+
+    func = make_new_mfun( "float", "output", Detune_cget_output ); //! ramp to arbitrary value.
+    if( !type_engine_import_mfun( env, func ) ) goto error;
+
+
+    type_engine_import_class_end( env );
+    return TRUE;
+error:
+    type_engine_import_class_end( env );
+    return FALSE;
+}
+
+t_CKBOOL detune_detach( t_CKUINT type, void * data )
+{
+    return TRUE;
+}
+
+CK_DLL_CTOR( Detune_ctor )
+{
+    // TODO: fix this horrid thing
+    Detune * d = (Detune *)OBJ_MEMBER_UINT(SELF, Detune_data);
+    SAFE_DELETE(d);
+
+    OBJ_MEMBER_UINT(SELF, Detune_data) = (t_CKUINT)new Detune;
+}
+
+CK_DLL_DTOR( Detune_dtor )
+{
+    delete (Detune *)OBJ_MEMBER_UINT(SELF, Detune_data);
+    OBJ_MEMBER_UINT(SELF, Detune_data) = 0;
+}
+
+
+CK_DLL_TICK( Detune_tick )
+{
+    Detune * d = (Detune *)OBJ_MEMBER_UINT(SELF, Detune_data);
+    *out = in;
+    return TRUE;
+}
+
+CK_DLL_PMSG( Detune_pmsg )
+{
+    return FALSE;
+}
+
+CK_DLL_CTRL( Detune_ctrl_amount )
+{
+    Detune * d = (Detune *)OBJ_MEMBER_UINT(SELF, Detune_data);
+    d->setAmount( GET_CK_FLOAT(ARGS) );
+    RETURN->v_float = (t_CKFLOAT)d->F[12];
+}
+
+CK_DLL_CGET( Detune_cget_amount )
+{
+    Detune * d = (Detune *)OBJ_MEMBER_UINT(SELF, Detune_data);
+    RETURN->v_float = (t_CKFLOAT)d->F[12];
+}
+
+CK_DLL_CGET( Detune_cget_output )
+{
+    Detune * d = (Detune *)OBJ_MEMBER_UINT(SELF, Detune_data);
+
+    RETURN->v_float = (t_CKFLOAT)d->getResult();
+}
+
+Detune :: Detune()
+{
+}
+
+Detune :: ~Detune()
+{
+}
+
+void Detune :: setAmount(MY_FLOAT theAmount)
+{
+ F[12] = theAmount;
+}
+
+MY_FLOAT Detune :: getResult(void) const
+{
+ return detune();
+}
+
+MY_FLOAT Detune :: detune(void) const
+{
+//  MY_FLOAT *p = F[12];
+
+//  sscanf(s, "%Lf", p);
+
+  mpf_t in, tmp, acc, out, mul;
+  mpf_inits(in, mul, out, tmp, NULL);
+  mpf_set_d(in, F[12]);
+  for (int i = 0; i < 12; ++i) {
+    mpf_inits(tmp, acc, NULL);
+    mpf_set_d(mul, F[i]);
+    mpf_pow_ui(tmp, in, 11);
+    mpf_mul(acc, tmp, mul);
+    mpf_add(out, out, acc);
+    mpf_clears(tmp, acc, NULL);
+  }
+
+  double o = mpf_get_d(out);
+  mpf_clears(in, out, mul, NULL);
+  return o;
+}
+
diff -Nur chuck-1.3.5.2/src/ugen_detune.h chuck-1.3.5.2_mod/src/ugen_detune.h
--- chuck-1.3.5.2/src/ugen_detune.h	1970-01-01 01:00:00.000000000 +0100
+++ chuck-1.3.5.2_mod/src/ugen_detune.h	2016-11-10 03:37:19.426904254 +0100
@@ -0,0 +1,35 @@
+#ifndef __UGEN_DETUNE_H__
+#define __UGEN_DETUNE_H__
+
+#include "chuck_dl.h"
+
+
+#define MY_FLOAT long double
+DLL_QUERY detune_query( Chuck_DL_Query * QUERY );
+//t_CKBOOL detune_detach ( t_CKUINT type, void * data);
+CK_DLL_CTOR( Detune_ctor );
+CK_DLL_DTOR( Detune_dtor );
+CK_DLL_TICK( Detune_tick );
+CK_DLL_PMSG( Detune_pmsg );
+CK_DLL_CTRL( Detune_ctrl_amount );
+CK_DLL_CGET( Detune_cget_amount );
+CK_DLL_CGET( Detune_cget_output );
+
+class Detune
+{
+public:
+  Detune();
+  virtual ~Detune();
+  void setAmount(MY_FLOAT theAmount);
+  MY_FLOAT getResult(void) const;
+  MY_FLOAT detune(void) const;
+  MY_FLOAT F[13] = {
+   0.0030115596, 0.6717417634, -24.1878824391, 404.2703938388,
+   -3425.0836591318, 17019.9518580080, -53046.9642751875, 
+   106649.6679158292, -138150.6761080548, 111363.4808729368, 
+   -50818.8652045924, 10028.7312891634, 0.f
+  }; // we use the 12th to store the amount
+
+};
+
+#endif
